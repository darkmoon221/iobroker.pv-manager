{
  "version": 3,
  "sources": ["../../src/lib/metricsCalculator.ts"],
  "sourcesContent": ["import {PvManager} from '../main';\r\nimport {SensorData, STATES} from './model';\r\n\r\nexport class MetricsCalculator {\r\n\r\n    private readonly adapter: PvManager;\r\n\r\n    private wechselRichterTotal = '';\r\n    private wechselRichterCurrent = '';\r\n\r\n    private meterData = '';\r\n\r\n    constructor(pvManager: PvManager) {\r\n        this.adapter = pvManager;\r\n    }\r\n\r\n    updateWechselrichterTotal(total: string | undefined): void {\r\n        if (total) {\r\n            this.wechselRichterTotal = total;\r\n            this.adapter.log.debug('Update WechselrichterTotal: ' + this.wechselRichterTotal);\r\n        }\r\n    }\r\n\r\n    updateEnergyMeterData(meterData: string | undefined): void {\r\n        if (meterData) {\r\n            this.meterData = meterData;\r\n            this.calculateMetrics();\r\n            // this.calculateLiveConsumption();\r\n            this.calcLive();\r\n        }\r\n    }\r\n\r\n    updateWechselrichterCurrent(current: string | undefined): void {\r\n        if (current) {\r\n            this.wechselRichterCurrent = current;\r\n        }\r\n    }\r\n\r\n    getSensorData(): SensorData {\r\n        return JSON.parse(this.meterData,\r\n            (_, val) => {\r\n                if (Array.isArray(val) || typeof val !== 'object') {\r\n                    return val;\r\n                }\r\n                return Object.entries(val).reduce((a, [key, val]) => {\r\n                    (a as any)[key.toLowerCase()] = val;\r\n                    return a;\r\n                }, {});\r\n            });\r\n    }\r\n\r\n    calculateMetrics(): void {\r\n\r\n        if (this.wechselRichterTotal) {\r\n\r\n            const sensorData: SensorData = this.getSensorData();\r\n            // this.adapter.log.debug('Sensordata: ' + JSON.stringify(sensorData));\r\n\r\n            const wrKWH = parseFloat(this.wechselRichterTotal) / 1000;\r\n            // this.adapter.log.debug('Wechselrichter in kWh: ' + wrKWH);\r\n            this.setStateWithAck(STATES.total.prefix + STATES.total.wechselrichter, wrKWH);\r\n\r\n            const bezugHaushalt = sensorData.strom.bezug;\r\n            // this.adapter.log.debug('Bezug Haushalt in kWh: ' + bezugHaushalt);\r\n            this.setStateWithAck(STATES.total.prefix + STATES.total.bezugHaushalt, bezugHaushalt);\r\n\r\n\r\n            const einspeisungHaushalt = sensorData.strom.einspeisung;\r\n            // this.adapter.log.debug('Einspeisung Haushalt in kWh: ' + einspeisungHaushalt);\r\n            this.setStateWithAck(STATES.total.prefix + STATES.total.einspeisungHaushalt, einspeisungHaushalt);\r\n\r\n\r\n            const wpBezug = sensorData.heizung['1.8.0'];\r\n            // this.adapter.log.debug('Bezug WP in kWh: ' + wpBezug);\r\n            this.setStateWithAck(STATES.total.prefix + STATES.total.bezugWp, wpBezug);\r\n\r\n\r\n            const wpEinspeisung = sensorData.heizung['2.8.0'];\r\n            // this.adapter.log.debug('Einspeisung WP in kWh: ' + wpEinspeisung);\r\n            this.setStateWithAck(STATES.total.prefix + STATES.total.einspeisungWp, wpEinspeisung);\r\n\r\n\r\n            const eigenbedarfHaushalt = wrKWH - einspeisungHaushalt;\r\n            // this.adapter.log.debug('Eigenbedarf Haushalt: ' + eigenbedarfHaushalt);\r\n            this.setStateWithAck(STATES.total.prefix + STATES.total.eigenbedarfHaushalt, eigenbedarfHaushalt);\r\n\r\n\r\n            const eigenbedarfWp = wrKWH - wpEinspeisung - eigenbedarfHaushalt;\r\n            // this.adapter.log.debug('Eigenbedarf WP: ' + eigenbedarfWp);\r\n            this.setStateWithAck(STATES.total.prefix + STATES.total.eigenbedarfWp, eigenbedarfWp);\r\n\r\n\r\n            const bezugNetzWp = this.adapter.config.wpEnergyMeterTotalConsumptionBeforeChange + wpBezug - bezugHaushalt;\r\n            // this.adapter.log.debug('Bezug Netz WP: ' + bezugNetzWp);\r\n            this.setStateWithAck(STATES.total.prefix + STATES.total.bezugNetz, bezugNetzWp);\r\n\r\n\r\n            const gesamtVerbrauchHaushalt = bezugHaushalt + eigenbedarfHaushalt;\r\n            // this.adapter.log.debug('Gesamtverbrauch Haushalt: ' + gesamtVerbrauchHaushalt);\r\n            this.setStateWithAck(STATES.total.prefix + STATES.total.gesamtVerbrauchHaushalt, gesamtVerbrauchHaushalt);\r\n\r\n\r\n            const gesamtVerbrauchWP = bezugNetzWp + eigenbedarfWp;\r\n            // this.adapter.log.debug('Gesamtverbrauch WP: ' + gesamtVerbrauchWP);\r\n            this.setStateWithAck(STATES.total.prefix + STATES.total.gesamtVerbrauchWp, gesamtVerbrauchWP);\r\n\r\n\r\n            const eigenbedarfHaushaltAnteil = eigenbedarfHaushalt * 100 / wrKWH;\r\n            // this.adapter.log.debug('Eigenbedarf Haushalt %: ' + eigenbedarfHaushaltAnteil);\r\n            this.setStateWithAck(STATES.total.prefix + STATES.total.anteilEigenbedarfHaushalt, eigenbedarfHaushaltAnteil);\r\n\r\n\r\n            const eigenbedarfWpAnteil = eigenbedarfWp * 100 / wrKWH;\r\n            // this.adapter.log.debug('Eigenbedarf WP %: ' + eigenbedarfWpAnteil);\r\n            this.setStateWithAck(STATES.total.prefix + STATES.total.anteilEigenbedarfWp, eigenbedarfWpAnteil);\r\n\r\n\r\n            const eigenbedarfGesamtAnteil = (eigenbedarfWp + eigenbedarfHaushalt) * 100 / wrKWH;\r\n            // this.adapter.log.debug('Eigenbedarf gesamt %: ' + eigenbedarfGesamtAnteil);\r\n            this.setStateWithAck(STATES.total.prefix + STATES.total.gesamtEigenverbrauch, eigenbedarfGesamtAnteil);\r\n\r\n        }\r\n    }\r\n\r\n    calcLive(): void {\r\n        if (this.wechselRichterCurrent) {\r\n            const sensorData = this.getSensorData();\r\n            const wrCurrent = parseFloat(this.wechselRichterCurrent);\r\n\r\n            const haushalt = sensorData.strom.aktleist;\r\n            const wp = sensorData.heizung.aktleist;\r\n\r\n            const wechselrichterEinspeisung = wrCurrent < 0 ? 0 : wrCurrent;\r\n            let einspeisung = 0;\r\n            let bezug = 0;\r\n\r\n            const haushaltbezugRaw = haushalt;\r\n            const wpBezugRaw = wp;\r\n\r\n            let haushaltBezug = 0;\r\n            let wpBezug = 0;\r\n\r\n            if (wrCurrent < 0) {\r\n                if (haushalt < 0 || wp < 0) {\r\n                    this.adapter.log.warn('wr < 0, haushalt < 0 || wp < 0 should not happen');\r\n                    return;\r\n                } else {\r\n                    bezug = wp;\r\n                    haushaltBezug = haushalt;\r\n                    wpBezug = wp - haushalt;\r\n                }\r\n            } else {\r\n                if (haushalt < 0) {\r\n                    if (wp < 0) {\r\n                        einspeisung = wp;\r\n                        haushaltBezug = wrCurrent - Math.abs(haushalt);\r\n                        wpBezug = Math.abs(haushalt) - Math.abs(wp);\r\n                    } else {\r\n                        bezug = wp;\r\n                        haushaltBezug = wrCurrent - Math.abs(haushalt);\r\n                        wpBezug = Math.abs(haushalt) + wp;\r\n                    }\r\n                } else {\r\n                    if (wp < 0) {\r\n                        this.adapter.log.warn('wr > 0, haushalt > 0 || wp < 0 should not happen');\r\n                        return;\r\n                    } else {\r\n                        bezug = wp;\r\n                        haushaltBezug = wrCurrent + haushalt;\r\n                        wpBezug = wp - haushalt;\r\n                    }\r\n                }\r\n            }\r\n\r\n            this.setStateWithAck(STATES.current.prefix + STATES.current.wechselrichterEinspeisung, wechselrichterEinspeisung);\r\n            this.setStateWithAck(STATES.current.prefix + STATES.current.verbrauchHaushalt, haushaltBezug);\r\n            this.setStateWithAck(STATES.current.prefix + STATES.current.verbrauchWp, wpBezug);\r\n            this.setStateWithAck(STATES.current.prefix + STATES.current.bezugNetz, bezug);\r\n            this.setStateWithAck(STATES.current.prefix + STATES.current.einspeisungUeberschuss, einspeisung);\r\n            this.setStateWithAck(STATES.current.prefix + STATES.current.haushaltBezugRaw, haushaltbezugRaw);\r\n            this.setStateWithAck(STATES.current.prefix + STATES.current.wpBezugRaw, wpBezugRaw);\r\n        }\r\n    }\r\n\r\n    async intitializeStates(): Promise<any> {\r\n        await this.createObject(STATES.total.prefix, STATES.total.wechselrichter, 'kWh');\r\n        await this.createObject(STATES.total.prefix, STATES.total.bezugHaushalt, 'kWh');\r\n        await this.createObject(STATES.total.prefix, STATES.total.einspeisungHaushalt, 'kWh');\r\n        await this.createObject(STATES.total.prefix, STATES.total.bezugWp, 'kWh');\r\n        await this.createObject(STATES.total.prefix, STATES.total.einspeisungWp, 'kWh');\r\n        await this.createObject(STATES.total.prefix, STATES.total.eigenbedarfHaushalt, 'kWh');\r\n        await this.createObject(STATES.total.prefix, STATES.total.eigenbedarfWp, 'kWh');\r\n        await this.createObject(STATES.total.prefix, STATES.total.bezugNetz, 'kWh');\r\n        await this.createObject(STATES.total.prefix, STATES.total.gesamtVerbrauchHaushalt, 'kWh');\r\n        await this.createObject(STATES.total.prefix, STATES.total.gesamtVerbrauchWp, 'kWh');\r\n        await this.createObject(STATES.total.prefix, STATES.total.anteilEigenbedarfHaushalt, '%');\r\n        await this.createObject(STATES.total.prefix, STATES.total.anteilEigenbedarfWp, '%');\r\n        await this.createObject(STATES.total.prefix, STATES.total.gesamtEigenverbrauch, '%');\r\n\r\n\r\n        await this.createObject(STATES.current.prefix, STATES.current.wechselrichterEinspeisung, 'W');\r\n        await this.createObject(STATES.current.prefix, STATES.current.verbrauchHaushalt, 'W');\r\n        await this.createObject(STATES.current.prefix, STATES.current.verbrauchWp, 'W');\r\n        await this.createObject(STATES.current.prefix, STATES.current.einspeisungUeberschuss, 'W');\r\n        await this.createObject(STATES.current.prefix, STATES.current.bezugNetz, 'W');\r\n        await this.createObject(STATES.current.prefix, STATES.current.haushaltBezugRaw, 'W');\r\n        await this.createObject(STATES.current.prefix, STATES.current.wpBezugRaw, 'W');\r\n    }\r\n\r\n    createObject(prefix: string, state: string, unit: string): Promise<any> {\r\n        return this.adapter.setObjectNotExistsAsync(prefix + state, {\r\n            type: 'state',\r\n            common: {\r\n                name: state,\r\n                type: 'number',\r\n                role: 'variable',\r\n                read: true,\r\n                write: true,\r\n                unit: unit\r\n            },\r\n            native: {},\r\n        });\r\n    }\r\n\r\n    setStateWithAck(state: string, value: string | number) {\r\n        this.adapter.setStateAsync(state, {val: value, ack: true});\r\n    }\r\n\r\n}\r\n"],
  "mappings": "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",
  "names": []
}
